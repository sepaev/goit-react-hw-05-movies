{"version":3,"sources":["components/Navigation/Navigation.module.css","components/FilmInfo/FilmInfo.module.css","components/FilmList/FilmList.module.css","components/SearchBox/SearchBox.module.css","components/Reviews/Reviews.module.css","components/FilmList/FilmList.jsx","services/api.js","views/HomeView.js","components/SearchBox/SearchBox.jsx","components/SearchList/SearchList.jsx","views/MoviesView.js","images/no-image-available.png","components/Cast/Cast.jsx","components/Comment/Comment.jsx","components/Reviews/Reviews.jsx","components/FilmInfo/FilmInfo.jsx","views/NotFoundView.js","views/MovieInfoView.js","components/Navigation/Navigation.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FilmList","films","location","useLocation","className","css","_filmList","map","film","_filmItem","to","pathname","id","state","pathback","_filmLink","title","axios","defaults","baseURL","params","api_key","language","fetchTrandingMovies","a","timeWindow","get","fetchMoviesByName","query","page","include_adult","fetchMoviesById","fetchActorsByMovieId","fetchReviewsByMovieId","HomeView","useState","setFilms","useEffect","response","status","data","results","Error","console","log","message","fetchData","SearchBox","onSearch","setQuery","onClick","htmlFor","type","onChange","e","target","value","onKeyDown","code","_searchInput","placeholder","_searchButton","SearchList","length","MoviesView","setResponse","history","useHistory","historyQuery","URLSearchParams","search","search_query","total_pages","total_results","push","Cast","cast","name","character","profile_path","imgLink","nophoto","src","alt","width","Comment","comment","phrase","index","Reviews","reviews","author","content","url","split","_autorName","href","_autorLink","FilmInfo","block","setBlock","blockData","setBlockData","useRouteMatch","localBlock","includes","changeBlock","preventDefault","blockName","innerText","toLowerCase","join","poster_path","popularity","overview","genres","year","release_date","genresString","_goBackButton","_infoSection","_imageWrapper","_posterImage","toFixed","path","NotFoundView","MovieInfoView","setFilm","noPage","setNoPage","filmId","useParams","movieId","parseInt","toString","Navigation","_nav","exact","_link","activeClassName","_activeLink","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3583cf8b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"_nav\":\"Navigation__nav__3bsi8\",\"_link\":\"Navigation__link__UAz3_\",\"_activeLink\":\"Navigation__activeLink__3JKDl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_goBackButton\":\"FilmInfo__goBackButton__2ajhQ\",\"_infoSection\":\"FilmInfo__infoSection__35vGL\",\"_imageWrapper\":\"FilmInfo__imageWrapper__2tNs2\",\"_posterImage\":\"FilmInfo__posterImage__3fXUY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_filmList\":\"FilmList__filmList__3W2mF\",\"_filmLink\":\"FilmList__filmLink__nP15H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_searchInput\":\"SearchBox__searchInput__1O67z\",\"_searchButton\":\"SearchBox__searchButton__2VMyP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"_autorName\":\"Reviews__autorName__1jflS\",\"_autorLink\":\"Reviews__autorLink__ACb82\"};","import PropTypes from 'prop-types';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport css from './FilmList.module.css';\r\n\r\nfunction FilmList({ films }) {\r\n  const location = useLocation();\r\n  return (\r\n    <ul className={css._filmList}>\r\n      {films.map(film => (\r\n        <li key={film.id} className={css._filmItem}>\r\n          <Link to={{ pathname: 'movies/' + film.id, state: { pathback: location } }} className={css._filmLink}>\r\n            {film.title}\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default FilmList;\r\n\r\nFilmList.propTypes = {\r\n  films: PropTypes.array,\r\n};\r\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '8948cf34f147d17edd39edcb74badce4';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = { api_key: API_KEY, language: 'en-US' };\n\n////////////// TRANDING\nexport const fetchTrandingMovies = async (timeWindow = 'day') => {\n  return await axios.get(`/trending/movie/${timeWindow}`);\n};\n\n////////////// SEARCH\nexport const fetchMoviesByName = async (query, page = 1) => {\n  return await axios.get('/search/movie', {\n    params: {\n      query,\n      page,\n      include_adult: false,\n    },\n  });\n};\n\n////////////// FILM INFO\nexport const fetchMoviesById = async id => {\n  return await axios.get(`/movie/${id}`);\n};\n\n////////////// ACTORS\nexport const fetchActorsByMovieId = async id => {\n  return await axios.get(`/movie/${id}/credits`);\n};\n\n////////////// FILM REVIEWS\nexport const fetchReviewsByMovieId = async (id, page = 1) => {\n  return await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      page,\n    },\n  });\n};\n","import { useEffect, useState } from 'react';\r\nimport FilmList from '../components/FilmList/FilmList';\r\nimport { fetchTrandingMovies } from '../services/api';\r\n\r\nfunction HomeView() {\r\n  const [films, setFilms] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetchTrandingMovies();\r\n        if (response.status === 200) {\r\n          setFilms(response.data.results);\r\n        } else {\r\n          throw new Error('Error - ' + response.status);\r\n        }\r\n      } catch (error) {\r\n        console.log('rejected   ' + error.message);\r\n        return null;\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='container'>\r\n      <h1>Trending today</h1>\r\n      {films && <FilmList films={films} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeView;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport css from './SearchBox.module.css';\r\n\r\nfunction SearchBox({ onSearch }) {\r\n  const [query, setQuery] = useState('');\r\n  function onChange(e) {\r\n    setQuery(e.target.value);\r\n  }\r\n  function onKeyDown(e) {\r\n    if (e.code === 'Enter') onClick();\r\n  }\r\n\r\n  function onClick() {\r\n    onSearch(query);\r\n    setQuery('');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor=''>\r\n        <input\r\n          type='text'\r\n          onChange={onChange}\r\n          onKeyDown={onKeyDown}\r\n          className={css._searchInput}\r\n          value={query}\r\n          placeholder='Film name'\r\n        />\r\n      </label>\r\n      <button className={css._searchButton} onClick={onClick}>\r\n        Search\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n\r\nSearchBox.propTypes = {\r\n  onSearch: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport FilmList from '../FilmList';\r\n\r\nfunction SearchList({ films, response }) {\r\n  if (!films) return <h2>loading...</h2>;\r\n  return (\r\n    <div className='container'>\r\n      <h1>Search result</h1>\r\n      {films && <FilmList films={films} response={response} />}\r\n      {films.length === 0 && <h2>Not found. Please search another film.</h2>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchList;\r\n\r\nSearchList.propTypes = {\r\n  films: PropTypes.array,\r\n  response: PropTypes.object,\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport SearchBox from '../components/SearchBox';\r\nimport { fetchMoviesByName } from '../services/api';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport SearchList from '../components/SearchList';\r\n\r\nfunction MoviesView() {\r\n  const [query, setQuery] = useState('');\r\n  const [films, setFilms] = useState(null);\r\n  const [response, setResponse] = useState(null);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const historyQuery = new URLSearchParams(location.search).get('query');\r\n\r\n  function onSearch(query) {\r\n    setQuery(query);\r\n    setResponse(null);\r\n  }\r\n  const search_query = query ? query : historyQuery;\r\n\r\n  useEffect(() => {\r\n    if (!search_query) return;\r\n    if (response && response.search_query === search_query) return;\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetchMoviesByName(search_query, 1);\r\n        if (response.status === 200) {\r\n          const { page, total_pages, results, total_results } = response.data;\r\n          setResponse({ page, total_pages, total_results, search_query });\r\n          setFilms(results);\r\n          history.push({ ...location, search: `query=${search_query}` });\r\n        } else {\r\n          throw new Error('Error - ' + response.status);\r\n        }\r\n      } catch (error) {\r\n        console.log('rejected   ' + error.message);\r\n        setResponse(null);\r\n        setFilms(null);\r\n        return null;\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [history, location, response, search_query]);\r\n\r\n  return (\r\n    <>\r\n      <SearchBox onSearch={onSearch} />\r\n      {historyQuery && <SearchList films={films} response={response} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MoviesView;\r\n","export default __webpack_public_path__ + \"static/media/no-image-available.ae2f3efe.png\";","import PropTypes from 'prop-types';\r\nimport { Fragment } from 'react';\r\nimport nophoto from '../../images/no-image-available.png';\r\nfunction Cast({ cast }) {\r\n  if (!cast) return <h3>loading...</h3>;\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {cast.map(({ id, name, character, profile_path }) => {\r\n          const imgLink = profile_path ? 'https://image.tmdb.org/t/p/w300' + profile_path : nophoto;\r\n          return (\r\n            <Fragment key={id + '_0'}>\r\n              <img src={imgLink} alt={name + ' as ' + character} width='100px' key={id + '_1'} />\r\n              <li key={id + '_2'}>\r\n                <p key={id + '_3'}>{name}</p>\r\n                <p key={id + '_4'}>{character}</p>\r\n              </li>\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cast;\r\n\r\nCast.propTypes = {\r\n  cast: PropTypes.array,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Comment({ comment }) {\r\n  if (!comment) return <h3>no comments</h3>;\r\n  return comment.map((phrase, index) => {\r\n    return <p key={index}>{phrase}</p>;\r\n  });\r\n}\r\n\r\nexport default Comment;\r\n\r\nComment.propTypes = {\r\n  cast: PropTypes.array,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport Comment from '../Comment';\r\nimport css from './Reviews.module.css';\r\n\r\nfunction Reviews({ reviews, page }) {\r\n  if (!reviews || reviews.length < 1) return <h3>We don't have any reviews for this movie.</h3>;\r\n  return (\r\n    <ul>\r\n      {reviews.map(({ id, author, content, url }) => {\r\n        const comment = content.split('\\r\\n\\r\\n');\r\n        return (\r\n          <li key={id}>\r\n            <p className={css._autorName}>\r\n              Author:\r\n              <a href={url} className={css._autorLink}>\r\n                {' '}\r\n                {author}{' '}\r\n              </a>\r\n            </p>\r\n            <Comment comment={comment} />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Reviews;\r\n\r\nReviews.propTypes = {\r\n  reviews: PropTypes.array,\r\n  page: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport css from './FilmInfo.module.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, Route, useRouteMatch, useLocation, Switch } from 'react-router-dom';\r\nimport { fetchActorsByMovieId, fetchReviewsByMovieId } from '../../services/api';\r\nimport Cast from '../Cast';\r\nimport Reviews from '../Reviews';\r\n\r\nfunction FilmInfo({ film }) {\r\n  const [block, setBlock] = useState(null);\r\n  const [blockData, setBlockData] = useState({ cast: [], results: [], page: 1 });\r\n  const { url } = useRouteMatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  let localBlock = getPathBlock();\r\n\r\n  if (localBlock !== block) setBlock(localBlock);\r\n\r\n  function getPathBlock() {\r\n    if (location.pathname.includes('cast')) return 'cast';\r\n    if (location.pathname.includes('reviews')) return 'reviews';\r\n    return '';\r\n    // const arr = location.pathname.split('/');\r\n    // const pathnameEnd = arr[arr.length - 1];\r\n    // return pathnameEnd === 'cast' || pathnameEnd === 'reviews' ? pathnameEnd : '';\r\n  }\r\n\r\n  function goBack() {\r\n    // if (!location.state) return history.push('/');\r\n    history.push(location?.state?.pathback || '/');\r\n  }\r\n\r\n  function changeBlock(e) {\r\n    e.preventDefault();\r\n    const blockName = e.target.innerText.toLowerCase();\r\n    if (!block || block !== blockName) {\r\n      setBlock(blockName);\r\n      history.push((url + '/' + blockName + '/').split('//').join('/'));\r\n      return;\r\n    }\r\n    if (block === blockName) {\r\n      setBlock(null);\r\n      history.push(history.location.pathname.split(block)[0]);\r\n      localBlock = '';\r\n      return;\r\n    }\r\n  }\r\n  function getYear(dateString) {\r\n    return dateString.split('-')[0];\r\n  }\r\n  useEffect(() => {\r\n    if (!film || !localBlock) return <h1>loading...</h1>;\r\n    const { id } = film;\r\n\r\n    async function fetchData(block) {\r\n      try {\r\n        let response;\r\n        if (block === 'cast') {\r\n          response = await fetchActorsByMovieId(id);\r\n        } else if (block === 'reviews') {\r\n          response = await fetchReviewsByMovieId(id);\r\n        } else {\r\n          setBlockData(null);\r\n          return <h1>No cast</h1>;\r\n        }\r\n        if (response.status === 200) {\r\n          setBlockData(response.data);\r\n        } else {\r\n          throw new Error('Error - ' + response.status);\r\n        }\r\n      } catch (error) {\r\n        console.log('rejected   ' + error.message);\r\n        return null;\r\n      }\r\n    }\r\n\r\n    fetchData(block);\r\n  }, [film, block, localBlock]);\r\n\r\n  if (!film) return <h1>loading...</h1>;\r\n  const { id, title, poster_path, popularity, overview, genres, release_date } = film;\r\n  const year = getYear(release_date);\r\n  const genresString = genres.map(({ name }) => name).join(', ');\r\n  console.log(blockData);\r\n  return (\r\n    <div>\r\n      <button className={css._goBackButton} onClick={goBack}>\r\n        Go Back\r\n      </button>\r\n      <section key={id} className={css._infoSection}>\r\n        <h1 className='visually-hidden'>Film info</h1>\r\n        <div className={css._imageWrapper}>\r\n          <img src={'https://image.tmdb.org/t/p/w500' + poster_path} alt={title} className={css._posterImage} />\r\n        </div>\r\n        <div>\r\n          <h2>{`${title} (${year})`}</h2>\r\n          <p>User Score: {popularity.toFixed(0)} %</p>\r\n          <h3>Overview</h3>\r\n          <p>{overview}</p>\r\n          <h4>Genres</h4>\r\n          <p>{genresString}</p>\r\n        </div>\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h1>Additional information</h1>\r\n        <ul>\r\n          <li>\r\n            <a href={url + '/cast/'} onClick={changeBlock}>\r\n              Cast\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href={url + '/reviews/'} onClick={changeBlock}>\r\n              Reviews\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <Switch>\r\n          <Route path={url + '/cast'}>{<Cast cast={blockData.cast} />}</Route>\r\n          <Route path={url + '/reviews'}>{<Reviews reviews={blockData.results} page={blockData.page} />}</Route>\r\n        </Switch>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilmInfo;\r\n\r\nFilmInfo.propTypes = {\r\n  film: PropTypes.object,\r\n};\r\n","function NotFoundView() {\r\n  return <h1>404 No such page :(</h1>;\r\n}\r\n\r\nexport default NotFoundView;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport FilmInfo from '../components/FilmInfo';\r\nimport { fetchMoviesById } from '../services/api';\r\nimport NotFoundView from './NotFoundView';\r\n\r\nfunction MovieInfoView() {\r\n  const [film, setFilm] = useState(null);\r\n  const [noPage, setNoPage] = useState(false);\r\n  const filmId = useParams().movieId;\r\n\r\n  if (parseInt(filmId).toString().length !== filmId.length && !noPage) setNoPage(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetchMoviesById(parseInt(filmId));\r\n        if (response.status === 200) {\r\n          const { id, title, poster_path, popularity, overview, genres, release_date } = response.data;\r\n          setFilm({ id, title, poster_path, popularity, overview, genres, release_date });\r\n          setNoPage(false);\r\n        } else {\r\n          throw new Error('Error - ' + response.status);\r\n        }\r\n      } catch (error) {\r\n        console.log('rejected   ' + error.message);\r\n        if (error.response && error.response.status === 404) setNoPage(true);\r\n        return null;\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [filmId]);\r\n\r\n  if (noPage) return <NotFoundView />;\r\n  return <div className='container'>{filmId && <FilmInfo film={film} />}</div>;\r\n}\r\n\r\nexport default MovieInfoView;\r\n","import { NavLink, useLocation } from 'react-router-dom';\r\nimport css from './Navigation.module.css';\r\n\r\nfunction Navigation() {\r\n  const location = useLocation();\r\n  return (\r\n    <nav className={css._nav}>\r\n      <NavLink exact to={'/'} className={css._link} activeClassName={css._activeLink}>\r\n        Home\r\n      </NavLink>\r\n      <NavLink\r\n        to={{ pathname: '/movies', state: { pathback: location } }}\r\n        className={css._link}\r\n        activeClassName={css._activeLink}\r\n      >\r\n        Movies\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import { Route, Switch } from 'react-router-dom';\r\nimport HomeView from './views/HomeView';\r\nimport MoviesView from './views/MoviesView';\r\nimport MovieInfoView from './views/MovieInfoView';\r\nimport Navigation from './components/Navigation';\r\nimport NotFoundView from './views/NotFoundView';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <header className='App-header'>\r\n        <Navigation />\r\n      </header>\r\n      <Switch>\r\n        <Route path='/' exact>\r\n          <HomeView />\r\n        </Route>\r\n        <Route path='/movies/:movieId'>\r\n          <MovieInfoView />\r\n        </Route>\r\n        <Route path='/movies'>\r\n          <MoviesView />\r\n        </Route>\r\n        <Route path='/'>\r\n          <NotFoundView />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\nreportWebVitals();\n"],"sourceRoot":""}